use crate::utils;
use std::time::Instant;

// Stub generated by templar
pub fn solve() {
    let lines = utils::file_to_lines("2021", "02");
    let mut time = Instant::now();
    println!("Part 1: {:?} in {:?}", part_one(&lines), time.elapsed());
    time = Instant::now();
    println!("Part 2: {:?} in {:?}", part_two(&lines), time.elapsed());
}

fn part_one(lines: &[String]) -> i32 {
    let mut horizontal = 0;
    let mut vertical = 0;

    lines
        .iter()
        .map(|line| {
            let mut split = line.split_whitespace();
            (
                split.next().unwrap(),
                split.next().unwrap().parse::<i32>().unwrap(),
            )
        })
        .for_each(|action| match action {
            ("forward", x) => horizontal += x,
            ("down", x) => vertical += x,
            ("up", x) => vertical -= x,
            _ => panic!("Invalid Input"),
        });
    vertical * horizontal
}

fn part_two(lines: &[String]) -> i32 {
    let mut horizontal = 0;
    let mut vertical = 0;
    let mut aim = 0;

    lines
        .iter()
        .map(|line| {
            let mut split = line.split_whitespace();
            (
                split.next().unwrap(),
                split.next().unwrap().parse::<i32>().unwrap(),
            )
        })
        .for_each(|action| match action {
            ("forward", x) => {
                horizontal += x;
                vertical += aim * x;
            }
            ("down", x) => aim += x,
            ("up", x) => aim -= x,
            _ => panic!("Invalid Input"),
        });

    vertical * horizontal
}
